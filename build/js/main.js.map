{"version":3,"file":"main.js","sources":["../../src/js/modules/app.js","../../src/js/main.js"],"sourcesContent":["export default function () {\n\n  document.addEventListener('DOMContentLoaded', () => {\n    const processButton = document.getElementById('processButton');\n    const clearButton = document.getElementById('clearButton');\n    const copyButtons = document.querySelectorAll('.copy-btn');\n\n    processButton.addEventListener('click', processHTML);\n    clearButton.addEventListener('click', clearFields);\n\n    copyButtons.forEach(button => {\n      button.addEventListener('click', event => {\n        const targetId = event.target.dataset.copyTarget;\n        copyToClipboard(targetId, event.target);\n      });\n    });\n  });\n\n  function processHTML() {\n    const input = document.getElementById('inputHTML').value.trim();\n\n    // Если поле пустое, ничего не делаем\n    if (input === \"\") {\n      return;\n    }\n\n    // Считываем значения чекбоксов\n    const options = {\n      cleanHTML: document.getElementById('cleanHTML').checked,\n      replaceCenterTags: document.getElementById('replaceCenterTags').checked,\n      removeEmptyTags: document.getElementById('removeEmptyTags').checked,\n      shouldGroupStyles: document.getElementById('groupStyles').checked,\n      omitBodyTag: document.getElementById('omitBodyTag').checked,\n    };\n\n    // Если выбран только \"Не публиковать body\", не делаем обработку\n    if (options.omitBodyTag && !options.cleanHTML && !options.replaceCenterTags && !options.removeEmptyTags && !options.shouldGroupStyles) {\n      return;\n    }\n\n    // Скрываем контейнеры с результатами до обработки\n    document.getElementById('cleanedHTMLContainer').style.display = 'none';\n    document.getElementById('extractedStylesContainer').style.display = 'none';\n\n    // Проверяем, является ли введенный текст CSS или HTML\n    const isCSS = checkIfCSS(input);\n    const isHTML = input.startsWith('<');\n\n    // Если выбран чекбокс для извлечения стилей или очистки HTML\n    if (options.cleanHTML || options.removeEmptyTags || options.replaceCenterTags || options.omitBodyTag) {\n      // Если только CSS\n      if (isCSS && !isHTML) {\n        if (options.shouldGroupStyles) {\n          const groupedCSS = groupCSS(input);\n          displayResult({ styles: groupedCSS });\n        } else {\n          displayResult({ styles: input });\n        }\n      }\n      // Если только HTML\n      else if (isHTML && !isCSS) {\n        const result = extractStylesAndCleanHTML(input, options);\n        displayResult(result);\n      }\n      // Если и HTML и CSS\n      else {\n        const result = extractStylesAndCleanHTML(input, options);\n        const groupedCSS = options.shouldGroupStyles ? groupCSS(input) : input; // Группируем только если стоит чекбокс\n        displayResult({\n          cleanedHTML: result.cleanedHTML,\n          styles: groupedCSS,\n        });\n      }\n    }\n  }\n\n  function checkIfCSS(text) {\n    return /^\\s*[.#a-zA-Z][^{]+\\{[^}]*\\}\\s*$/m.test(text);\n  }\n\n  function groupCSS(cssText) {\n    let styles = new Map();\n    parseAndAddStyles(styles, cssText);\n    return formatStyles(styles);\n  }\n\n  function extractStylesAndCleanHTML(html, options) {\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(html, 'text/html');\n\n    let styles = new Map();\n    let inlineStyleCounter = 1;\n\n    // 1. Извлекаем стили из тега <style> в HTML\n    if (options.cleanHTML) {\n      doc.querySelectorAll('style').forEach(style => {\n        parseAndAddStyles(styles, style.textContent);\n        style.remove();\n      });\n\n      // 2. Обрабатываем inline стили, если выбран чекбокс \"cleanHTML\"\n      doc.querySelectorAll('[style]').forEach(element => {\n        const inlineStyle = element.getAttribute('style');\n        if (inlineStyle) {\n          const className = `inl_${inlineStyleCounter++}`;\n          addStyle(styles, `.${className}`, inlineStyle);\n          element.removeAttribute('style');\n          element.classList.add(className);\n        }\n      });\n    }\n\n    // 3. Убираем пустые теги, если выбран чекбокс \"removeEmptyTags\"\n    if (options.removeEmptyTags) removeEmptyTags(doc);\n\n    // 4. Меняем теги <center> на <div>, если выбран чекбокс \"replaceCenterTags\"\n    if (options.replaceCenterTags) replaceCenterTags(doc);\n\n    let cleanedHTML = options.omitBodyTag\n      ? doc.body.innerHTML.trim()\n      : new XMLSerializer().serializeToString(doc.body);\n\n    const finalStyles = formatStyles(styles);\n\n    return { cleanedHTML, styles: finalStyles };\n  }\n\n  function parseAndAddStyles(styles, cssText) {\n    const rules = cssText.match(/[^{]+{[^}]*}/g) || [];\n\n    rules.forEach(rule => {\n      const match = rule.match(/(.*?)\\s*{\\s*([^}]*)\\s*}/);\n      if (match) {\n        const selector = match[1].trim();\n        const properties = match[2].trim();\n        addStyle(styles, selector, properties);\n      }\n    });\n  }\n\n  function addStyle(styles, selector, properties) {\n    const normalizedProps = properties\n      .split(';')\n      .map(prop => prop.trim())\n      .filter(Boolean)\n      .sort()\n      .join('; ');\n\n    if (styles.has(normalizedProps)) {\n      const existingSelectors = styles.get(normalizedProps);\n      styles.set(normalizedProps, `${existingSelectors}, ${selector}`);\n    } else {\n      styles.set(normalizedProps, selector);\n    }\n  }\n\n  function formatStyles(styles) {\n    return Array.from(styles.entries()).map(\n      ([properties, selectors]) => `${selectors} { ${properties}; }`\n    );\n  }\n\n  function removeEmptyTags(doc) {\n    const selfClosingTags = ['img', 'br', 'hr', 'input', 'meta', 'link', 'source'];\n\n    doc.querySelectorAll('*').forEach(element => {\n      const tagName = element.tagName.toLowerCase();\n      const isSelfClosing = selfClosingTags.includes(tagName);\n      const isEmpty = !element.textContent.trim() && element.children.length === 0;\n      const isInvalidImage = tagName === 'img' && !element.getAttribute('src');\n      const isEmptyParagraphWithBr =\n        tagName === 'p' &&\n        element.children.length === 1 &&\n        element.firstElementChild.tagName.toLowerCase() === 'br';\n\n      if (!isSelfClosing && (isEmpty || isInvalidImage || isEmptyParagraphWithBr)) {\n        element.remove();\n      }\n    });\n  }\n\n  function replaceCenterTags(doc) {\n    doc.querySelectorAll('center').forEach(center => {\n      const div = document.createElement('div');\n      div.innerHTML = center.innerHTML;\n      div.className = center.className ? `${center.className} content-center` : 'content-center';\n      center.replaceWith(div);\n    });\n  }\n\n  function displayResult(result) {\n    // Проверка, если ничего не нужно отображать\n    if (!result.cleanedHTML && !result.styles) {\n      return;\n    }\n\n    // Показываем только те блоки, которые имеют данные\n    document.getElementById('cleanedHTMLContainer').style.display = result.cleanedHTML ? 'block' : 'none';\n    document.getElementById('extractedStylesContainer').style.display = result.styles && result.styles.length > 0 ? 'block' : 'none';\n\n    if (result.cleanedHTML) {\n      document.getElementById('cleanedHTML').textContent = result.cleanedHTML;\n    }\n\n    if (result.styles && result.styles.length > 0) {\n      document.getElementById('extractedStyles').textContent = result.styles.join('\\n');\n    }\n  }\n\n  function copyToClipboard(elementId, button) {\n    const textToCopy = document.getElementById(elementId).textContent;\n    navigator.clipboard.writeText(textToCopy).then(() => {\n      const originalText = button.textContent;\n      button.textContent = 'Скопировано!';\n      setTimeout(() => {\n        button.textContent = originalText;\n      }, 2000);\n    });\n  }\n\n  function clearFields() {\n    // Очищаем все поля ввода\n    document.getElementById('inputHTML').value = '';\n    document.getElementById('cleanHTML').checked = false;\n    document.getElementById('replaceCenterTags').checked = false;\n    document.getElementById('removeEmptyTags').checked = false;\n    document.getElementById('groupStyles').checked = false;\n    document.getElementById('omitBodyTag').checked = false;\n\n    // Скрываем блоки с результатами\n    document.getElementById('cleanedHTMLContainer').style.display = 'none';\n    document.getElementById('extractedStylesContainer').style.display = 'none';\n\n    // Очистить текст внутри блоков с результатами\n    document.getElementById('cleanedHTML').textContent = '';\n    document.getElementById('extractedStyles').textContent = '';\n  }\n\n}\n","// import \"./helpers/postDate\";\n// import \"./helpers/everad\";\n\nimport app from \"./modules/app\";\n\nfunction main() {\n  app()\n}\n\nif (document.documentElement.clientWidth < 480) {\n  window.addEventListener(\"scroll\", function () {\n    setTimeout(main, 1000);\n  }, {\n    once: true,\n    passive: true,\n  });\n} else {\n  main();\n}\n"],"names":["document","addEventListener","processButton","getElementById","clearButton","copyButtons","querySelectorAll","processHTML","clearFields","forEach","button","event","targetId","target","dataset","copyTarget","copyToClipboard","input","value","trim","options","cleanHTML","checked","replaceCenterTags","removeEmptyTags","shouldGroupStyles","omitBodyTag","style","display","isCSS","checkIfCSS","isHTML","startsWith","groupedCSS","groupCSS","displayResult","styles","result","extractStylesAndCleanHTML","cleanedHTML","text","test","cssText","Map","parseAndAddStyles","formatStyles","html","parser","DOMParser","doc","parseFromString","inlineStyleCounter","textContent","remove","element","inlineStyle","getAttribute","className","concat","addStyle","removeAttribute","classList","add","body","innerHTML","XMLSerializer","serializeToString","finalStyles","rules","match","rule","selector","properties","normalizedProps","split","map","prop","filter","Boolean","sort","join","has","existingSelectors","get","set","Array","from","entries","_ref","_ref2","_slicedToArray","selectors","selfClosingTags","tagName","toLowerCase","isSelfClosing","includes","isEmpty","children","length","isInvalidImage","isEmptyParagraphWithBr","firstElementChild","center","div","createElement","replaceWith","elementId","textToCopy","navigator","clipboard","writeText","then","originalText","setTimeout","main","app","documentElement","clientWidth","window","once","passive"],"mappings":"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"}